{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "wagsdm"
		},
		"integrationRuntime_mltest1": {
			"type": "string",
			"metadata": "Integration runtime name",
			"defaultValue": "mltest1"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureSQlETL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSQlETL'"
		},
		"etlADF_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'etlADF'"
		},
		"idicdm_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'idicdm'"
		},
		"idisvr_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'idisvr'"
		},
		"runnotebook_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'runnotebook'"
		},
		"wagsADB_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'wagsADB'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://waginput.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQlETL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQlETL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/etlADF')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://eastus2.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('etlADF_accessToken')]"
					},
					"existingClusterId": "1205-140903-isles770"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/idicdm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('idicdm_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/idisvr')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('idisvr_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/runnotebook')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://eastus2.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('runnotebook_accessToken')]"
					},
					"newClusterNodeType": "Standard_DS5_v2",
					"newClusterNumOfWorker": "1",
					"newClusterSparkEnvVars": {
						"PYSPARK_PYTHON": "/databricks/python3/bin/python3"
					},
					"newClusterVersion": "6.2.x-cpu-ml-scala2.11"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/wagsADB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://eastus2.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('wagsADB_accessToken')]"
					},
					"existingClusterId": "1205-140903-isles770"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/', parameters('integrationRuntime_mltest1'))]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Vm for machine learning.",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADFParallel')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "etlADF",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "etlADF1",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "etlADF2",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Start",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/runnotebook"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stop",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "etlADF",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "etlADF1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "etlADF2",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "etlADF3",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "etlADF4",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "etlADF5",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "etlADF6",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "etlADF7",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "etlADF8",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/runnotebook"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "etlADF3",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "etlADF4",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "etlADF5",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "etlADF6",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "etlADF7",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "etlADF8",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "Start",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/etlADF"
						},
						"linkedServiceName": {
							"referenceName": "etlADF",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/etlADF')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Finalize')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "runnotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/babal@microsoft.com/SCM/runnotebook"
						},
						"linkedServiceName": {
							"referenceName": "runnotebook",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/runnotebook')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQlETL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "batchname",
						"type": "varchar"
					},
					{
						"name": "startdatetime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "enddatetime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "batchstatus",
						"type": "varchar"
					},
					{
						"name": "totaltimesec",
						"type": "int",
						"precision": 10
					},
					{
						"name": "inserttime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "username",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "etlbatch"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQlETL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Binary1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "incoming"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "test.csv",
						"fileSystem": "incoming"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "key",
						"type": "String"
					},
					{
						"name": "pickup_datetime",
						"type": "String"
					},
					{
						"name": "pickup_longitude",
						"type": "String"
					},
					{
						"name": "pickup_latitude",
						"type": "String"
					},
					{
						"name": "dropoff_longitude",
						"type": "String"
					},
					{
						"name": "dropoff_latitude",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "tmp"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Json1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "datamovies.json",
						"fileSystem": "incoming"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"actors": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string"
									}
								}
							}
						},
						"availabilityDate": {
							"type": "string"
						},
						"genre": {
							"type": "string"
						},
						"rating": {
							"type": "string"
						},
						"releaseYear": {
							"type": "integer"
						},
						"runtime": {
							"type": "integer"
						},
						"streamingAvailabilityDate": {
							"type": "string"
						},
						"tier": {
							"type": "integer"
						},
						"title": {
							"type": "string"
						},
						"id": {
							"type": "string"
						},
						"_rid": {
							"type": "string"
						},
						"_self": {
							"type": "string"
						},
						"_etag": {
							"type": "string"
						},
						"_attachments": {
							"type": "string"
						},
						"_ts": {
							"type": "integer"
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/csvfile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/filecheck')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "startjob"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/greentaxi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "nyctlc/green",
						"container": "opendataset"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "vendorID",
						"type": "INT32"
					},
					{
						"name": "lpepPickupDatetime",
						"type": "INT96"
					},
					{
						"name": "lpepDropoffDatetime",
						"type": "INT96"
					},
					{
						"name": "passengerCount",
						"type": "INT32"
					},
					{
						"name": "tripDistance",
						"type": "DOUBLE"
					},
					{
						"name": "puLocationId",
						"type": "UTF8"
					},
					{
						"name": "doLocationId",
						"type": "UTF8"
					},
					{
						"name": "pickupLongitude",
						"type": "DOUBLE"
					},
					{
						"name": "pickupLatitude",
						"type": "DOUBLE"
					},
					{
						"name": "dropoffLongitude",
						"type": "DOUBLE"
					},
					{
						"name": "dropoffLatitude",
						"type": "DOUBLE"
					},
					{
						"name": "rateCodeID",
						"type": "INT32"
					},
					{
						"name": "storeAndFwdFlag",
						"type": "UTF8"
					},
					{
						"name": "paymentType",
						"type": "INT32"
					},
					{
						"name": "fareAmount",
						"type": "DOUBLE"
					},
					{
						"name": "extra",
						"type": "DOUBLE"
					},
					{
						"name": "mtaTax",
						"type": "DOUBLE"
					},
					{
						"name": "improvementSurcharge",
						"type": "UTF8"
					},
					{
						"name": "tipAmount",
						"type": "DOUBLE"
					},
					{
						"name": "tollsAmount",
						"type": "DOUBLE"
					},
					{
						"name": "ehailFee",
						"type": "DOUBLE"
					},
					{
						"name": "totalAmount",
						"type": "DOUBLE"
					},
					{
						"name": "tripType",
						"type": "INT32"
					},
					{
						"name": "puYear",
						"type": "UTF8"
					},
					{
						"name": "puMonth",
						"type": "UTF8"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		}
	]
}